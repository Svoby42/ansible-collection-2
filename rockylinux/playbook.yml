---
- name: Install & configure Nginx
  hosts: app1
  become: yes
  gather_facts: false

  vars:
    server_name: localhost
    conf_file: /etc/nginx/sites-available/default

  handlers:
    - name: Restart nginx
      service:
        become: yes
        name: nginx
        enabled: yes
        state: restarted

  tasks:
    - name: Install nginx
      package:
        name: nginx
        update_cache: true
      notify: Restart nginx

    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 0750
      loop:
        - "/etc/nginx/sites-enabled"
        - "/etc/nginx/sites-available"
      notify: Restart nginx

    - name: Start nginx
      service:
        name: nginx
        state: started

    - name: Copy nginx config file
      template:
        src: nginx.conf.j2
        dest: "{{ conf_file }}"
        mode: 0644
      notify: Restart nginx

    - name: Enable configuration
      file: >
              dest=/etc/nginx/sites-enabled/default
              src=/etc/nginx/sites-available/default
              state=link

    - name: Copy index page
      template:
        src: index.html.j2
        dest: /usr/share/nginx/html/index.html
      notify: Restart nginx

    - name: Restart nginx
      meta: flush_handlers

    - name: start firewalld
      service:
              name: firewalld
              state: started
              enabled: yes

    - name: Permit HTTP traffic
      firewalld:
        zone: public
        port: 80/tcp
        permanent: true
        state: enabled
      become: yes

    - name: Add some users
      user:
        name: "{{ item.name }}"
        state: present
        groups: "{{ item.groups }}"
      loop:
        - { name: 'testuser1', groups: 'wheel' }
        - { name: 'testuser2', groups: 'root' }
      tags:
        - users

    - name: "Testing..."
      become: false
      uri:
        url: 'http://localhost:80/index.html'
        status_code: 200
      tags:
        - test
...
